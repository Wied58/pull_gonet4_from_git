--- 
- 
  hosts: all
  become: true
  become_method: sudo
  become_user: root
  tasks:
  
#      - name: Ensure pip3 is installed 
#        apt:
#          name: python3-pip 
#          state: present
#      
#
#      - name: Ensure setuptools 3 is installed 
#        apt:
#          name: python3-setuptools
#          state: present
#          
#
#      - name: Ensure pyserial is installed with pip 3
#        pip:
#          name: pyserial
#          executable: pip3
#
#      - name: Ensure Pillow is installed with pip 3
#        pip:
#          name: Pillow
#          executable: pip3
#          
#      - name: Ensure picamera is installed with pip 3
#        pip:
#          name: picamera
#          executable: pip3
#          
#      - name: Ensure fraction is installed with pip 3
#        pip:
#          name: fraction
#          executable: pip3

      - name: Ansible register variable basic example
        shell: "ls"
        args:
          chdir: "/home/pi/Tools/Version"
        register: version
   
      - debug:
          var: version.stdout

      - name: Copy gonet4.py with version
        copy:
          src: "/home/pi/Tools/Camera/gonet4.py"
          dest: "/home/pi/Tools/Camera/gonet4.py.{{ version.stdout }}"
          owner: pi
          group: pi
          mode: '0755'

      - name: Get gonet4 repo from GitHub
        git: 
          dest: /home/pi/Tools/git_repo
          repo: "https://github.com/Wied58/gonet4.git"
          update: yes
          force: yes
          version: "main"

      - name: Change owership and permissions
        file:
           path: /home/pi/Tools/git_repo
           state: directory
           owner: pi 
           group: pi
           # when specifying mode using octal numbers, add a leading 0
           mode: 0755
           recurse: yes

      - name: Ansible register variable basic example
        shell: "git --git-dir /home/pi/Tools/git_repo/.git log --pretty=oneline --decorate | head -1 | awk '{print substr($1,1,5)}'"
        args:
          #chdir: "/home/pi/Tools/Version"
        register: new_version
   
      - debug:
          var: new_version.stdout


      - name: empty dest directory 
        file:
          state: absent
          path: /home/pi/Tools/Version/
      
      - name: recreate directory 
        file:
          state: directory
          path: /home/pi/Tools/Version/
      
      - name: ensure file exists
        copy:
          content: ""
          dest: "/home/pi/Tools/Version/20.{{ version.stdout }}"
          force: no
          group: pi
          owner: pi
          mode: 0555

#      - name: Execute the update Version script
#        command:  /home/pi/Tools/git_repo/fetch_git_hash.sh
#        become_user: pi

#      - name: Ansible create file if it doesn't exist example
#        file:
#          path: "/home/pi/Tools/Version/{{ new_version.stdout }}"
#          state: touch

      - name: Copy gonet4.py from git_repo to Camera
        copy:
          src: "/home/pi/Tools/git_repo/gonet4.py"
          dest: "/home/pi/Tools/Camera/gonet4.py"
          owner: pi
          group: pi
          mode: '0755'

      - name: Set GPU Memory
        lineinfile:
           dest: /boot/config.txt
           regexp: '^gpu_mem='
           line: 'gpu_mem=256'

#      - name: Fix PiCamera Timeout
#        lineinfile:
#          path: /usr/local/lib/python3.7/dist-packages/picamera/camera.py
#          regexp: 'CAPTURE_TIMEOUT ='
#          line: 'CAPTURE_TIMEOUT = 600'
        
      - name: Update .bashrc
        blockinfile: 
           dest: "/home/pi/.bashrc"
           block: |
             alias pull_gonet='ansible-pull -d /home/pi/pull -i 'localhost,' -U https://github.com/Wied58/pull_gonet4_from_git pull_gonet4_from_git.yml'
   

